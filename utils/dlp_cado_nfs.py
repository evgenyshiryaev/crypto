# https://en.wikipedia.org/wiki/Pohlig%E2%80%93Hellman_algorithm
# https://cothan.blog/post/discrete-log-with-cado-nfs/


from sympy.ntheory import discrete_log, factorint
from sympy.ntheory.modular import crt


# ell - GF(p) subgroup order
def cado(ell, t0, t1, p):
    return f'./cado-nfs.py -dlp -ell {ell} target={t0},{t1} {p}'


def pohlig_hellman(a, b, p):
    n = p - 1  # order
    ps = []
    for n0, n1 in factorint(n).items():
        ni = n0 ** n1
        ai, bi = pow(a, n // ni, p), pow(b, n // ni, p)
        print(cado(ni, ai, bi, p))
        ps.append(ni)
    print(ps)


if __name__ == '__main__':
    _a = 12527757556323992250036778502891051249984474232171227560335608894171352453586
    _b = 2603551142613802156596017541251324868039611736645656770096264806834683812589
    _p = 23536927400084672584547780360605321978508195328072019467170066018450918216627

    pohlig_hellman(_a, _b, _p)
    # ./ cado - nfs.py - dlp - ell 2 target = 23536927400084672584547780360605321978508195328072019467170066018450918216626,23536927400084672584547780360605321978508195328072019467170066018450918216626 23536927400084672584547780360605321978508195328072019467170066018450918216627
    # ./ cado - nfs.py - dlp - ell 11768463700042336292273890180302660989254097664036009733585033009225459108313 target = 3037175425126623831051553290353561042921506272540871307002303539783573381089,9508013992128351987085953962208839786368880401042757915344197448705029147067 23536927400084672584547780360605321978508195328072019467170066018450918216627
    # [2, 11768463700042336292273890180302660989254097664036009733585033009225459108313]

    _x0 = discrete_log(_p, 23536927400084672584547780360605321978508195328072019467170066018450918216626, 23536927400084672584547780360605321978508195328072019467170066018450918216626, 2)

    # logab = logb / loga
    _a_log, _b_log = 3825907694889401444121713872797773271827220109941494987822025998908276753583, 5997907509358873756194983214989181393075648191451102620396766809042331872625
    _x1 = _b_log * pow(_a_log, -1, 11768463700042336292273890180302660989254097664036009733585033009225459108313)

    _x = crt((_x0, _x1), (2, 11768463700042336292273890180302660989254097664036009733585033009225459108313))
    assert pow(_a, _x[1], _p) == _b
